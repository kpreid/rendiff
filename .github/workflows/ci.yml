name: Build & Test

permissions: {}

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
      - ci

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation because we aren't caching incremental compilation
  # artifacts, so they won't be useful for anything (other than maybe the exhaustive
  # builds with different features).
  CARGO_INCREMENTAL: 0

jobs:
  test:
    strategy:
      matrix:
        toolchain: [stable, beta, nightly, "1.75.0"]

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.toolchain != 'stable' }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      # Install exactly what we need: compiler, Cargo, clippy
      run: |
          rustup toolchain install "${{ matrix.toolchain }}" --profile=minimal --component=clippy
          rustup override set "${{ matrix.toolchain }}"

    # Load cache before doing any Rust builds
    - uses: Swatinem/rust-cache@v2.7.3

    - name: Lint
      run: |
        cargo clippy --timings
        cargo rustdoc --package=rendiff -- -Drustdoc::broken_intra_doc_links

    - name: Compile (no features)
      # compile is broken out so we have visibility into compile vs. run times
      run: cargo test --no-default-features --timings --no-run

    - name: Run tests (no features)
      run: cargo test --no-default-features

    - name: Compile (all features)
      run: cargo test --all-features --timings --no-run

    - name: Run tests (all features)
      run: cargo test --all-features

    - name: Update
      run: cargo update

    - name: Compile with updates
      run: cargo test --timings --no-run

    - name: Test with updates
      run: cargo test --timings

    # Save timing reports so we can download and view them
    # (for understanding build performance in CI)
    - name: Save cargo --timings output
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: cargo-timings ${{ matrix.toolchain }}
        path: |
          target/cargo-timings/cargo-timing-*.html

  semver:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2.7.3

    - name: Check semver
      uses: obi1kenobi/cargo-semver-checks-action@v2.3
      # Use workspace target dir for cargo install's build, so that the build will be cached.
      env:
        CARGO_TARGET_DIR: target/
      with:
        package: "rendiff"

  mutants:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2.7.3

      - name: Install Rust toolchain
        # Not sure if this is strictly necessary -- but it is if GitHub Actions images aren't
        # always as up to date than we want.
        run: rustup toolchain install stable --profile=minimal

      - name: Install cargo-mutants
        run: cargo install cargo-mutants@24.5.0

      - name: Run mutation testing
        run: cargo mutants --package=rendiff -- --all-features

      - name: Save results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report
          path: "mutants.out"
